namespace = global\offset
; OffsetFix.ini Version 4.0.1
; - Finally solving AA issues and implementing the base necesary for proper face offset in the future.
; - Fixed crashes for some AMD videocards

; Check latest version at: https://github.com/leotorrez/LeoTools/releases
; Author: LeoTorreZ
;
; Description: - Offsets models in the vertical axis
;              - Experimental face scale - Somewhat deprecated
;              - Experimental face weapon offset - non functional at the moment
;
; How to use: https://github.com/leotorrez/LeoTools/blob/main/guides/ChangeSizeGuide.md
;

[Constants]
global $active = 0
global $faceActive = 0
global $offset = 0
global $faceOffset = 0
global $faceScale = 1

[CommandListOffset]
if DRAW_TYPE != 1
	x169 = $offset
	y169 = $faceOffset
	x170 = 0
	x171 = 1
	$active = 1
endif

[CommandListOffsetFace]
; Left to avoid error triggering in old mods
if DRAW_TYPE != 1
	x169 = $offset
	y169 = $faceOffset
	x170 = 0
	x171 = 1
	$active = 1
endif

[CommandListClean]
$active = 0
$offset = 0
$faceActive = 0
x169 = 0
y169 = 0
x170 = 0
x171 = 1
vs-cb12 = null
vs-cb13 = null

;----------------------------------- REGEX DECLARATIONS ----------------------------------

[ShaderRegexMeshNatlanFace]
shader_model = vs_5_0
temps = ini
post run = CommandListClean

[ShaderRegexMesh]
shader_model = vs_5_0
temps = ini
post run = CommandListClean

[ShaderRegexOutlineNatlan]
shader_model = vs_5_0
temps = ini
post run = CommandListClean

[ShaderRegexOutline]
shader_model = vs_5_0
temps = ini
post run = CommandListClean

[ShaderRegexAA]
shader_model = vs_5_0
temps = ini
post run = CommandListClean

[ShaderRegexAASecondPass]
shader_model = vs_5_0
temps = ini
post run = CommandListClean

[ShaderRegexReflections]
shader_model = vs_5_0
temps = ini
post run = CommandListClean

[ShaderRegexMeshNatlanFace.InsertDeclarations]
dcl_resource_texture1d (float,float,float,float) t120
dcl_constantbuffer CB12[10], immediateIndexed

[ShaderRegexOutlineNatlan.InsertDeclarations]
dcl_resource_texture1d (float,float,float,float) t120
dcl_constantbuffer CB8[7], immediateIndexed
dcl_constantbuffer CB13[10], immediateIndexed

[ShaderRegexOutline.InsertDeclarations]
dcl_resource_texture1d (float,float,float,float) t120
dcl_constantbuffer CB13[10], immediateIndexed

[ShaderRegexMesh.InsertDeclarations]
dcl_resource_texture1d (float,float,float,float) t120

[ShaderRegexAA.InsertDeclarations]
dcl_resource_texture1d (float,float,float,float) t120

[ShaderRegexAASecondPass.InsertDeclarations]
dcl_resource_texture1d (float,float,float,float) t120

[ShaderRegexReflections.InsertDeclarations]
dcl_resource_texture1d (float,float,float,float) t120

;---------------------------------- REGEX REPLACEMENT ----------------------------------

[ShaderRegexAA.Pattern]
(mov r\d.x, cb\d\[0\].\w\n
mov r\d.y, cb\d\[1\].\w\n
mov r\d.z, cb\d\[2\].\w\n
add )(r\d)(.xyw, -cb1\[5\].xyxz, cb\d\[3\].xyxz\n)
(mov r\d.w, r\d.\w\n
mov r\d.xyz, v0.xyzx\n
mov r\d.w, l\(1.000000\)\n
dp4 r\d.x, r\d.xyzw, r\d.xyzw\n)

[ShaderRegexAA.Pattern.Replace]
ld_indexable(texture1d)(float,float,float,float) ${ini}.xyzw, l(169,0), t120.xyzw\n
$1$2$3
add $2.y, $2.y, ${ini}.x\n
$4

[ShaderRegexAASecondPass.Pattern]
(mov o0.w, r4.w\n
add o0.z, -r1.y, r1.z\n
mov o1.xyzw, v2.xyzw\n)
(mul r4.xyzw, )(r0.y)(yyy, cb0\[\d+\].xyzw\n
mad r4.xyzw, cb0\[\d+\].xyzw, r0.xxxx, r4.xyzw\n
mad r4.xyzw, cb0\[\d+\].xyzw, r1.wwww, r4.xyzw\n
mad o2.xyzw, cb0\[\d+\].xyzw, r1.xxxx, r4.xyzw\n
movc r1.xyz, cb0\[\d+\].xxxx, v4.xyzx, v0.xyzx\n
mul r4.xyzw, r1.yyyy, cb5\[1\].xyzw\n
mad r4.xyzw, cb5\[0\].xyzw, r1.xxxx, r4.xyzw\n
mad r1.xyzw, cb5\[2\].xyzw, r1.zzzz, r4.xyzw\n
add r1.xyzw, r1.xyzw, cb5\[3\].xyzw\n
mul r3.yzw, r1.yyyy, cb0\[\d+\].xxyz\n
mad r3.yzw, cb0\[\d+\].xxyz, r1.xxxx, r3.yyzw\n
mad r1.xyz, cb0\[\d+\].xyzx, r1.zzzz, r3.yzwy\n
mad r1.xyz, cb0\[\d+\].xyzx, r1.wwww, r1.xyzx\n
mul r0.x, r0.w, -r1.z\n
lt r0.x, r0.x, cb0\[\d+\].y\n
movc r4.xyzw, r0.xxxx, r5.xyzw, r6.xyzw\n
mad r0.x, -r1.z, r0.w, -r4.x\n
add r0.yw, -r4.xxxz, r4.yyyw\n
max r0.y, r0.y, l\(0.001000\)\n)

[ShaderRegexAASecondPass.Pattern.Replace]
ld_indexable(texture1d)(float,float,float,float) ${ini}.xyzw, l(169,0), t120.xyzw\n
$1
add $3, $3, -${ini}.x\n
$2$3$4

[ShaderRegexMeshNatlanFace.Pattern]
(mul o\d+.xyz, r\d+.yyyy, r\d+.xyzx\n
mul (r\d+).xyzw, [vr]\d+.yyyy, cb2\[1\].xyzw\n
mad r\d+.xyzw, cb2\[0\].xyzw, [vr]\d+.xxxx, r\d+.xyzw\n
mad r\d+.xyzw, cb2\[2\].xyzw, [vr]\d+.zzzz, r\d+.xyzw\n
add r\d+.xyzw, r\d+.xyzw, cb2\[3\].xyzw\n
mul r0.y, r\d+.y, cb3\[10\].z\n
mad r0.y, cb3\[9\].z, r\d+.x, r0.y\n
mad r0.y, cb3\[11\].z, r\d+.z, r0.y\n
mad r0.y, cb3\[12\].z, r\d+.w, r0.y\n
mov o6.w, -r0.y\n
add r\d+.xyw, -cb1\[5\].xyxz, cb2\[3\].xyxz\n)

[ShaderRegexMeshNatlanFace.Pattern.Replace]
$1\n
ld_indexable(texture1d)(float,float,float,float) ${ini}.xyzw, l(169,0), t120.xyzw\n
if_nz cb12\[3\].y\n
	add $2.xyw, -cb2\[3\].xyxz, cb12\[3\].xyxz\n
	mul $2.xyw, $2.xw, -${ini}.yyyy\n
	add $2.xyw, cb2\[3\].xyxz, $2.xyw\n
	add $2.xyw, -cb1\[5\].xyxz, $2.xyw\n
endif\n
add $2.y, $2.y, ${ini}.x\n

[ShaderRegexOutlineNatlan.Pattern]
(mul r1.xyzw, v0.yyyy, cb\d\[1\].xyzw\n
mad r1.xyzw, cb\d\[0\].xyzw, v0.xxxx, r1.xyzw\n
mad r1.xyzw, cb\d\[2\].xyzw, v0.zzzz, r1.xyzw\n
add r1.xyzw, r1.xyzw, cb\d\[3\].xyzw\n
mul r0.w, r1.y, cb\d\[10\].z\n
mad r0.w, cb3\[9\].z, r1.x, r0.w\n
mad r0.w, cb3\[11\].z, r1.z, r0.w\n
mad r0.w, cb3\[12\].z, r1.w, r0.w\n
mov o4.w, -r0.w\n
add r1.xyw, -cb1\[5\].xyxz, cb\d\[3\].xyxz\n)

[ShaderRegexOutlineNatlan.Pattern.Replace]
$1\n
ld_indexable(texture1d)(float,float,float,float) ${ini}.xyzw, l(169,0), t120.xyzw\n
if_nz cb13\[3\].y\n
	add r1.xyw, -cb2\[3\].xyxz, cb13\[3\].xyxz\n
	mul r1.xyw, r1.xw, -${ini}.yyyy\n
	add r1.xyw, cb2\[3\].xyxz, r1.xyw\n
	add r1.xyw, -cb1\[5\].xyxz, r1.xyw\n
endif\n
add r1.y, r1.y, ${ini}.x\n

[ShaderRegexOutline.Pattern]
(\s+mov r\d+.x, cb3\[0\].x
\s+mov r\d+.y, cb3\[1\].x
\s+mov r\d+.z, cb3\[2\].x
\s+mov r\d+.w, r\d+.x
(\s+mov r\d+.xyz, v0.xyzx)?
\s+mov r\d+.w, l\(1.000000\)
\s+dp4 r\d+.x, r\d+.xyzw, r\d+.xyzw
\s+mov r\d+.x, cb3\[0\].y
\s+mov r\d+.y, cb3\[1\].y
\s+mov r\d+.z, cb3\[2\].y
\s+mov r\d+.w, r\d+.y
\s+dp4 r\d+.y, r\d+.xyzw, r\d+.xyzw
\s+mov (r\d+).x, cb3\[0\].z
\s+mov r\d+.y, cb3\[1\].z
\s+mov r\d+.z, cb3\[2\].z
\s+dp4 r\d+.z, r\d+.xyzw, r\d+.xyzw
\s+mov r\d+.x, cb3\[0\].w
\s+mov r\d+.y, cb3\[1\].w
\s+mov r\d+.z, cb3\[2\].w
\s+mov r\d+.w, cb3\[3\].w)
(\s+)(dp4 r\d+.w, r\d+.xyzw, r\d+.xyzw)\n

[ShaderRegexOutline.Pattern.Replace]
\nld_indexable(texture1d)(float,float,float,float) ${ini}.xyzw, l(169,0), t120.xyzw\n
if_nz cb13\[3\].y\n
	add $3.xyw, -cb3\[3\].xyxz, cb13\[3\].xyxz\n
	mul $3.xyw, $3.xw, -${ini}.yyyy\n
	add $3.xyw, cb3\[3\].xyxz, $3.xyw\n
	add $3.xyw, -cb1\[5\].xyxz, $3.xyw\n
endif\n
add $3.y, $3.y, ${ini}.x\n
$1\n
$5\n

[ShaderRegexReflections.Pattern]
(rsq r\d+.w, r\d+.w\n
mul o3.xyz, r\d+.wwww, r\d+.xyzx\n
mul r\d+.xyzw, [rv]0.yyyy, cb2\[1\].xyzw\n
mad r\d+.xyzw, cb2\[0\].xyzw, [rv]0.xxxx, r\d+.xyzw\n
mad r\d+.xyzw, cb2\[2\].xyzw, [rv]0.zzzz, r\d+.xyzw\n
add r\d+.xyzw, r\d+.xyzw, cb2\[3\].xyzw\n
mul r\d+.w, r\d+.y, cb3\[10\].z\n
mad r\d+.w, cb3\[9\].z, r\d+.x, r\d+.w\n
mad r\d+.w, cb3\[11\].z, r\d+.z, r\d+.w\n
mad r\d+.w, cb3\[12\].z, r\d+.w, r\d+.w\n
mov o6.w, -r\d+.w\n
add (r\d+).xyw, -cb1\[5\].xyxz, cb2\[3\].xyxz\n)

[ShaderRegexReflections.Pattern.Replace]
ld_indexable(texture1d)(float,float,float,float) ${ini}.xyzw, l(169,0), t120.xyzw\n
$1\n
add $2.y, $2.y, ${ini}.x\n

[ShaderRegexMesh.Pattern]
(?P<AAA>mul r\d+.\w+, )(?P<BBB>r\d+.\w)(?P<CCC>\w+, cb\d+\[\d+\].\w+\n
mad r\d+.\w+, cb\d+\[\d+\].\w+, r\d+.\w+, r\d+.\w+\n
mad r\d+.\w+, cb\d+\[\d+\].\w+, r\d+.\w+, r\d+.\w+\n
mad r\d+.\w+, cb\d+\[\d+\].\w+, r\d+.\w+, r\d+.\w+\n
mad r\d+.\w+, -cb\d+\[\d+\].\w+, r\d+.\w+, r\d+.\w+\n
ne r\d+.\w+, l\(0.000000, 0.000000, 0.000000, 0.000000\), cb\d+\[\d+\].\w+\n
lt r\d.\w, cb0\[\d+\].\w, l\(0.950000\)\n)

[ShaderRegexMesh.Pattern.Replace]
ld_indexable(texture1d)(float,float,float,float) ${ini}.xyzw, l(169,0), t120.xyzw\n
add ${BBB}, ${BBB}, ${ini}.x\n
${AAA}${BBB}${CCC}\n


